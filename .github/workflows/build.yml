name: Build Tauri App

on:
  push:
    branches: [ "main" ] # mainブランチにプッシュされた時に実行
  pull_request:
    branches: [ "main" ]

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            arch: x86_64
          - platform: windows-latest
            arch: x64 # 64bit版
            rust_target: x86_64-pc-windows-msvc
          - platform: windows-latest
            arch: x86 # 32bit版
            rust_target: i686-pc-windows-msvc

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install 32-bit Rust target for Windows
        if: matrix.rust_target == 'i686-pc-windows-msvc'
        run: rustup target add i686-pc-windows-msvc

      - name: Install dependencies (npm)
        run: npm install

      # Windowsビルドの場合のみ、--targetフラグを付けて実行
      - name: Build Tauri application
        run: npx tauri build --target ${{ matrix.rust_target }}
        if: matrix.platform == 'windows-latest'

      - name: Build Tauri application
        run: npx tauri build
        if: matrix.platform != 'windows-latest'

      - name: Upload macOS Artifact (APP Bundle)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-application
          path: src-tauri/target/release/bundle/macos/*.app

      - name: Upload Windows Artifact (EXE)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: bundle-${{ matrix.platform }}-${{ matrix.arch }}
          # ターゲット指定ビルドの場合、releaseフォルダがターゲット名の配下に入る
          path: src-tauri/target/${{ matrix.rust_target || 'release' }}/bundle/
  